{"ast":null,"code":"var _jsxFileName = \"/Users/petehodnefield/Documents/coding-projects-personal/meloroids-copy/frontend/src/pages/ArtistModeSelect/ArtistModeSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SelectArtist from \"./components/SelectArtist\";\nimport SelectMode from \"./components/SelectMode\";\nimport ChosenArtistMode from \"./components/ChosenArtistMode\";\nimport { artistsPhotos } from \"../../data/artistsPhotos\";\nimport { modesList } from \"../../data/modesList\";\nimport logoFull from \"../../assets/logo/meloroids.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArtistModeSelect() {\n  _s();\n  // import artistarray\n  const artists = artistsPhotos;\n\n  // import modeslist\n  const modes = modesList;\n\n  // State\n  const [selectedArtists, setSelectedArtists] = useState(\"\");\n  const [selectedArtistsPhoto, setSelectedArtistsPhoto] = useState(\"\");\n  const [selectedMode, setSelectedMode] = useState(\"\");\n  const [selectedModePhoto, setSelectedModePhoto] = useState(\"\");\n  const [intervalLength, setIntervalLength] = useState(\"5\");\n  console.log(\"interval\", intervalLength);\n  useEffect(() => {\n    artists.forEach(artist => {\n      if (artist.name === selectedArtists) {\n        setSelectedArtistsPhoto(artist.photo);\n      } else {\n        return;\n      }\n    });\n  }, [selectedArtists]);\n  useEffect(() => {\n    modes.forEach(mode => {\n      if (mode.name === selectedMode) {\n        setSelectedModePhoto(mode.photo);\n      } else {\n        return;\n      }\n    });\n  }, [selectedMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-mode-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage-logo-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"homepage-logo\",\n        src: logoFull\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-mode-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(SelectArtist, {\n        setSelectedArtists: setSelectedArtists,\n        selectedArtists: selectedArtists,\n        artists: artists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectMode, {\n        modes: modes,\n        selectedMode: selectedMode,\n        setSelectedMode: setSelectedMode,\n        intervalLength: intervalLength,\n        setIntervalLength: setIntervalLength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !selectedArtists || !selectedMode ? \"\" : /*#__PURE__*/_jsxDEV(ChosenArtistMode, {\n        selectedArtistsPhoto: selectedArtistsPhoto,\n        selectedModePhoto: selectedModePhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ` btn-primary btn-link ${!selectedArtists || !selectedMode ? \"btn-cloudy\" : \"btn btn-nonCloudy\"}`,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"primary uppercase p2\",\n          to: `/train/artists/${selectedArtists}/${selectedMode}`,\n          state: {\n            from: intervalLength\n          },\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtistModeSelect, \"CWlUautuB04hKy/o3WX5KxTDKIA=\");\n_c = ArtistModeSelect;\nexport default ArtistModeSelect;\nvar _c;\n$RefreshReg$(_c, \"ArtistModeSelect\");","map":{"version":3,"names":["React","useState","useEffect","Link","SelectArtist","SelectMode","ChosenArtistMode","artistsPhotos","modesList","logoFull","ArtistModeSelect","artists","modes","selectedArtists","setSelectedArtists","selectedArtistsPhoto","setSelectedArtistsPhoto","selectedMode","setSelectedMode","selectedModePhoto","setSelectedModePhoto","intervalLength","setIntervalLength","console","log","forEach","artist","name","photo","mode","from"],"sources":["/Users/petehodnefield/Documents/coding-projects-personal/meloroids-copy/frontend/src/pages/ArtistModeSelect/ArtistModeSelect.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport SelectArtist from \"./components/SelectArtist\";\nimport SelectMode from \"./components/SelectMode\";\nimport ChosenArtistMode from \"./components/ChosenArtistMode\";\nimport { artistsPhotos } from \"../../data/artistsPhotos\";\nimport { modesList } from \"../../data/modesList\";\n\nimport logoFull from \"../../assets/logo/meloroids.png\";\n\nfunction ArtistModeSelect() {\n  // import artistarray\n  const artists = artistsPhotos;\n\n  // import modeslist\n  const modes = modesList;\n\n  // State\n  const [selectedArtists, setSelectedArtists] = useState(\"\");\n  const [selectedArtistsPhoto, setSelectedArtistsPhoto] = useState(\"\");\n\n  const [selectedMode, setSelectedMode] = useState(\"\");\n  const [selectedModePhoto, setSelectedModePhoto] = useState(\"\");\n\n  const [intervalLength, setIntervalLength] = useState(\"5\");\n  console.log(\"interval\", intervalLength);\n\n  useEffect(() => {\n    artists.forEach((artist) => {\n      if (artist.name === selectedArtists) {\n        setSelectedArtistsPhoto(artist.photo);\n      } else {\n        return;\n      }\n    });\n  }, [selectedArtists]);\n\n  useEffect(() => {\n    modes.forEach((mode) => {\n      if (mode.name === selectedMode) {\n        setSelectedModePhoto(mode.photo);\n      } else {\n        return;\n      }\n    });\n  }, [selectedMode]);\n\n  return (\n    <div className=\"artist-mode-container\">\n      <div className=\"homepage-logo-wrapper\">\n        <img className=\"homepage-logo\" src={logoFull}></img>\n      </div>\n      <div className=\"artist-mode-wrapper\">\n        <SelectArtist\n          setSelectedArtists={setSelectedArtists}\n          selectedArtists={selectedArtists}\n          artists={artists}\n        ></SelectArtist>\n        <SelectMode\n          modes={modes}\n          selectedMode={selectedMode}\n          setSelectedMode={setSelectedMode}\n          intervalLength={intervalLength}\n          setIntervalLength={setIntervalLength}\n        ></SelectMode>\n\n        {!selectedArtists || !selectedMode ? (\n          \"\"\n        ) : (\n          <ChosenArtistMode\n            selectedArtistsPhoto={selectedArtistsPhoto}\n            selectedModePhoto={selectedModePhoto}\n          ></ChosenArtistMode>\n        )}\n\n        <button\n          className={` btn-primary btn-link ${\n            !selectedArtists || !selectedMode\n              ? \"btn-cloudy\"\n              : \"btn btn-nonCloudy\"\n          }`}\n        >\n          <Link\n            className=\"primary uppercase p2\"\n            to={`/train/artists/${selectedArtists}/${selectedMode}`}\n            state={{ from: intervalLength }}\n          >\n            Start\n          </Link>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ArtistModeSelect;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}