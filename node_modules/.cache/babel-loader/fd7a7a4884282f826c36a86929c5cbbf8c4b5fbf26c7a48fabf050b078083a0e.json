{"ast":null,"code":"var _jsxFileName = \"/Users/petehodnefield/Documents/coding-projects-personal/melody-trainer/client/src/components/ReferenceSongs/ReferenceSongsFrequency.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { SINGLE_SONG, ARTIST_AND_PROGRESSION } from \"../../utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReferenceSongsFrequency = _ref => {\n  _s();\n  let {\n    selectedProgression,\n    artist_name\n  } = _ref;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ARTIST_AND_PROGRESSION, {\n    variables: {\n      artistName: artist_name,\n      progression: selectedProgression\n    }\n  });\n  const {\n    data: singleData,\n    loading: singleLoading,\n    singleError\n  } = useQuery(SINGLE_SONG, {\n    variables: {\n      artistName: artist_name\n    }\n  });\n  if (loading || singleLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    const totalSongs = singleData.song.length;\n    const songsWithProgression = data.artistAndProgression.length;\n    const progressionFrequency = songsWithProgression / totalSongs * 100;\n    const frequencyRound = Math.floor(progressionFrequency);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"frequency-bar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"frequency__text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"btn-selected bold  pill pd1\",\n          children: selectedProgression\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \" \", \"is used in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bold\",\n          children: [frequencyRound, \"% \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }, this), \" of\", \" \", artist_name, \"'s songs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-shadow frequency__barfr pill\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frequency__barbg pill\",\n          style: {\n            width: progressionFrequency + \"%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(ReferenceSongsFrequency, \"qh+R7xRAQdMyqyY1yFuKRGJ7nuA=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = ReferenceSongsFrequency;\nexport default ReferenceSongsFrequency;\nvar _c;\n$RefreshReg$(_c, \"ReferenceSongsFrequency\");","map":{"version":3,"names":["React","useQuery","SINGLE_SONG","ARTIST_AND_PROGRESSION","ReferenceSongsFrequency","selectedProgression","artist_name","data","loading","error","variables","artistName","progression","singleData","singleLoading","singleError","totalSongs","song","length","songsWithProgression","artistAndProgression","progressionFrequency","frequencyRound","Math","floor","width"],"sources":["/Users/petehodnefield/Documents/coding-projects-personal/melody-trainer/client/src/components/ReferenceSongs/ReferenceSongsFrequency.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { SINGLE_SONG, ARTIST_AND_PROGRESSION } from \"../../utils/queries\";\n\nconst ReferenceSongsFrequency = ({ selectedProgression, artist_name }) => {\n  const { data, loading, error } = useQuery(ARTIST_AND_PROGRESSION, {\n    variables: { artistName: artist_name, progression: selectedProgression },\n  });\n  const {\n    data: singleData,\n    loading: singleLoading,\n    singleError,\n  } = useQuery(SINGLE_SONG, {\n    variables: { artistName: artist_name },\n  });\n  if (loading || singleLoading) {\n    return (\n      <div className=\"loading-container\">\n        <h1>loading</h1>\n      </div>\n    );\n  } else {\n    const totalSongs = singleData.song.length;\n    const songsWithProgression = data.artistAndProgression.length;\n\n    const progressionFrequency = (songsWithProgression / totalSongs) * 100;\n    const frequencyRound = Math.floor(progressionFrequency);\n    return (\n      <div className=\"frequency-bar-container\">\n        <h5 className=\"frequency__text\">\n          <span className=\"btn-selected bold  pill pd1\">\n            {selectedProgression}\n          </span>{\" \"}\n          is used in <span className=\"bold\">{frequencyRound}% </span> of{\" \"}\n          {artist_name}'s songs\n        </h5>\n        <div className=\"box-shadow frequency__barfr pill\">\n          <div\n            className=\"frequency__barbg pill\"\n            style={{ width: progressionFrequency + \"%\" }}\n          ></div>\n        </div>\n      </div>\n    );\n  }\n};\nexport default ReferenceSongsFrequency;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,SAASC,WAAW,EAAEC,sBAAsB,QAAQ,qBAAqB;AAAC;AAE1E,MAAMC,uBAAuB,GAAG,QAA0C;EAAA;EAAA,IAAzC;IAAEC,mBAAmB;IAAEC;EAAY,CAAC;EACnE,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGR,QAAQ,CAACE,sBAAsB,EAAE;IAChEO,SAAS,EAAE;MAAEC,UAAU,EAAEL,WAAW;MAAEM,WAAW,EAAEP;IAAoB;EACzE,CAAC,CAAC;EACF,MAAM;IACJE,IAAI,EAAEM,UAAU;IAChBL,OAAO,EAAEM,aAAa;IACtBC;EACF,CAAC,GAAGd,QAAQ,CAACC,WAAW,EAAE;IACxBQ,SAAS,EAAE;MAAEC,UAAU,EAAEL;IAAY;EACvC,CAAC,CAAC;EACF,IAAIE,OAAO,IAAIM,aAAa,EAAE;IAC5B,oBACE;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA,QACZ;EAEV,CAAC,MAAM;IACL,MAAME,UAAU,GAAGH,UAAU,CAACI,IAAI,CAACC,MAAM;IACzC,MAAMC,oBAAoB,GAAGZ,IAAI,CAACa,oBAAoB,CAACF,MAAM;IAE7D,MAAMG,oBAAoB,GAAIF,oBAAoB,GAAGH,UAAU,GAAI,GAAG;IACtE,MAAMM,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,oBAAoB,CAAC;IACvD,oBACE;MAAK,SAAS,EAAC,yBAAyB;MAAA,wBACtC;QAAI,SAAS,EAAC,iBAAiB;QAAA,wBAC7B;UAAM,SAAS,EAAC,6BAA6B;UAAA,UAC1ChB;QAAmB;UAAA;UAAA;UAAA;QAAA,QACf,EAAC,GAAG,8BACA;UAAM,SAAS,EAAC,MAAM;UAAA,WAAEiB,cAAc;QAAA;UAAA;UAAA;UAAA;QAAA,QAAU,SAAI,GAAG,EACjEhB,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QACT,eACL;QAAK,SAAS,EAAC,kCAAkC;QAAA,uBAC/C;UACE,SAAS,EAAC,uBAAuB;UACjC,KAAK,EAAE;YAAEmB,KAAK,EAAEJ,oBAAoB,GAAG;UAAI;QAAE;UAAA;UAAA;UAAA;QAAA;MACxC;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF,CAAC;AAAC,GAzCIjB,uBAAuB;EAAA,QACMH,QAAQ,EAOrCA,QAAQ;AAAA;AAAA,KARRG,uBAAuB;AA0C7B,eAAeA,uBAAuB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}