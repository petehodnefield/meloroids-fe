{"ast":null,"code":"var _jsxFileName = \"/Users/petehodnefield/Documents/coding-projects-personal/melody-trainer/client/src/components/ReferenceSongs/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { REFERENCE_SONGS, ARTIST_AND_PROGRESSION } from \"../../utils/queries\";\nimport AlbumArtwork from \"./AlbumArtwork\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReferenceSongs = _ref => {\n  _s();\n  let {\n    artist_name,\n    progression,\n    selectedSong\n  } = _ref;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(REFERENCE_SONGS, {\n    variables: {\n      artistName: artist_name,\n      progression: progression\n    }\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  } else {\n    const songArray = data.referenceSongs;\n    let artistNameConcat = artist_name.split(\" \").join(\"\");\n    let artistNameNewConcat = artist_name.split(\" \").join(\"\");\n    if (artistNameConcat === \"21Savage\") {\n      artistNameConcat = \"twentyone\";\n    }\n    const displayReferenceSongs = song => {\n      console.log(song);\n      return song.map(song => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ref-song-container ${artistNameConcat}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ref__textWrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ref__text \",\n              children: [\"\\\"\", song.song_name, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlbumArtwork, {\n            album: song.album_name,\n            artist: artistNameNewConcat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ref-container-blank\",\n      children: [\" \", songArray.length <= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ref-container-noRef\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ref__noRef bold\",\n          children: [\"There are no other songs by \", artist_name, \" with this progression!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ref-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ref-header-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ref__header\",\n            children: \"Other songs that use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold pill pd1 btn-primary primary\",\n            children: progression\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ref-song-grid\",\n          children: displayReferenceSongs(songArray)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(ReferenceSongs, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n_c = ReferenceSongs;\nexport default ReferenceSongs;\nvar _c;\n$RefreshReg$(_c, \"ReferenceSongs\");","map":{"version":3,"names":["React","useQuery","REFERENCE_SONGS","ARTIST_AND_PROGRESSION","AlbumArtwork","ReferenceSongs","artist_name","progression","selectedSong","data","loading","error","variables","artistName","songArray","referenceSongs","artistNameConcat","split","join","artistNameNewConcat","displayReferenceSongs","song","console","log","map","song_name","album_name","length"],"sources":["/Users/petehodnefield/Documents/coding-projects-personal/melody-trainer/client/src/components/ReferenceSongs/index.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { REFERENCE_SONGS, ARTIST_AND_PROGRESSION } from \"../../utils/queries\";\nimport AlbumArtwork from \"./AlbumArtwork\";\nconst ReferenceSongs = ({ artist_name, progression, selectedSong }) => {\n  const { data, loading, error } = useQuery(REFERENCE_SONGS, {\n    variables: { artistName: artist_name, progression: progression },\n  });\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <h1>loading</h1>\n      </div>\n    );\n  } else {\n    const songArray = data.referenceSongs;\n\n    let artistNameConcat = artist_name.split(\" \").join(\"\");\n    let artistNameNewConcat = artist_name.split(\" \").join(\"\");\n    if (artistNameConcat === \"21Savage\") {\n      artistNameConcat = \"twentyone\";\n    }\n\n    const displayReferenceSongs = (song) => {\n      console.log(song);\n\n      return song.map((song) => {\n        return (\n          <div className={`ref-song-container ${artistNameConcat}`}>\n            <div className=\"ref__textWrapper\">\n              <p className=\"ref__text \">\"{song.song_name}\"</p>\n              {/* <p className=\"ref__text ref__album\">{song.album_name}</p> */}\n            </div>\n            <AlbumArtwork\n              album={song.album_name}\n              artist={artistNameNewConcat}\n            ></AlbumArtwork>\n          </div>\n        );\n      });\n    };\n\n    return (\n      <div className=\"ref-container-blank\">\n        {\" \"}\n        {songArray.length <= 1 ? (\n          <div className=\"ref-container-noRef\">\n            <p className=\"ref__noRef bold\">\n              There are no other songs by {artist_name} with this progression!\n            </p>\n          </div>\n        ) : (\n          <div className=\"ref-container\">\n            <div className=\"ref-header-wrapper\">\n              <h3 className=\"ref__header\">Other songs that use</h3>{\" \"}\n              <span className=\"bold pill pd1 btn-primary primary\">\n                {progression}\n              </span>\n            </div>\n            <div className=\"ref-song-grid\">\n              {displayReferenceSongs(songArray)}\n            </div>{\" \"}\n          </div>\n        )}\n      </div>\n    );\n  }\n};\nexport default ReferenceSongs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,eAAe,EAAEC,sBAAsB,QAAQ,qBAAqB;AAC7E,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAC1C,MAAMC,cAAc,GAAG,QAAgD;EAAA;EAAA,IAA/C;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAa,CAAC;EAChE,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,QAAQ,CAACC,eAAe,EAAE;IACzDU,SAAS,EAAE;MAAEC,UAAU,EAAEP,WAAW;MAAEC,WAAW,EAAEA;IAAY;EACjE,CAAC,CAAC;EACF,IAAIG,OAAO,EAAE;IACX,oBACE;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA,QACZ;EAEV,CAAC,MAAM;IACL,MAAMI,SAAS,GAAGL,IAAI,CAACM,cAAc;IAErC,IAAIC,gBAAgB,GAAGV,WAAW,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IACtD,IAAIC,mBAAmB,GAAGb,WAAW,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IACzD,IAAIF,gBAAgB,KAAK,UAAU,EAAE;MACnCA,gBAAgB,GAAG,WAAW;IAChC;IAEA,MAAMI,qBAAqB,GAAIC,IAAI,IAAK;MACtCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,OAAOA,IAAI,CAACG,GAAG,CAAEH,IAAI,IAAK;QACxB,oBACE;UAAK,SAAS,EAAG,sBAAqBL,gBAAiB,EAAE;UAAA,wBACvD;YAAK,SAAS,EAAC,kBAAkB;YAAA,uBAC/B;cAAG,SAAS,EAAC,YAAY;cAAA,iBAAGK,IAAI,CAACI,SAAS;YAAA;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA,QAE5C,eACN,QAAC,YAAY;YACX,KAAK,EAAEJ,IAAI,CAACK,UAAW;YACvB,MAAM,EAAEP;UAAoB;YAAA;YAAA;YAAA;UAAA,QACd;QAAA;UAAA;UAAA;UAAA;QAAA,QACZ;MAEV,CAAC,CAAC;IACJ,CAAC;IAED,oBACE;MAAK,SAAS,EAAC,qBAAqB;MAAA,WACjC,GAAG,EACHL,SAAS,CAACa,MAAM,IAAI,CAAC,gBACpB;QAAK,SAAS,EAAC,qBAAqB;QAAA,uBAClC;UAAG,SAAS,EAAC,iBAAiB;UAAA,2CACCrB,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA;MACtC;QAAA;QAAA;QAAA;MAAA,QACA,gBAEN;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAK,SAAS,EAAC,oBAAoB;UAAA,wBACjC;YAAI,SAAS,EAAC,aAAa;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA0B,EAAC,GAAG,eACzD;YAAM,SAAS,EAAC,mCAAmC;YAAA,UAChDC;UAAW;YAAA;YAAA;YAAA;UAAA,QACP;QAAA;UAAA;UAAA;UAAA;QAAA,QACH,eACN;UAAK,SAAS,EAAC,eAAe;UAAA,UAC3Ba,qBAAqB,CAACN,SAAS;QAAC;UAAA;UAAA;UAAA;QAAA,QAC7B,EAAC,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAEb;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAEV;AACF,CAAC;AAAC,GA/DIT,cAAc;EAAA,QACeJ,QAAQ;AAAA;AAAA,KADrCI,cAAc;AAgEpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}