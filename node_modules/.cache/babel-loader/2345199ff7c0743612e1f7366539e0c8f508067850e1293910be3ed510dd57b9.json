{"ast":null,"code":"var _jsxFileName = \"/Users/petehodnefield/Documents/coding-projects-personal/melody-trainer/client/src/pages/Freestyle/components/TrainInfo.js\",\n  _s = $RefreshSig$();\nimport { React } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { SINGLE_SONG } from \"../../../utils/queries\";\nimport Juice from \"../../../assets/artists/juice.jpeg\";\nimport TwentyOne from \"../../../assets/artists/21.jpeg\";\nimport Doja from \"../../../assets/artists/doja.jpeg\";\nimport Harlow from \"../../../assets/artists/harlow.jpeg\";\nimport Gunna from \"../../../assets/artists/gunna.jpeg\";\nimport ReferenceSongs from \"../../../components/ReferenceSongs/index\";\nimport ReferenceSongsFrequency from \"../../../components/ReferenceSongs/ReferenceSongsFrequency\";\nimport KeyTempoChords from \"../../../components/KeyTempoChords\";\nimport ReRoll from \"../../../components/KeyTempoChords/ReRoll\";\nimport { chordIcon, keyIcon, tempoIcon } from \"../../../data/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrainInfo(_ref) {\n  _s();\n  let {\n    artist_name\n  } = _ref;\n  console.log(chordIcon, keyIcon);\n  const {\n    data: songData,\n    loading: songLoading,\n    error: songError\n  } = useQuery(SINGLE_SONG, {\n    variables: {\n      artistName: artist_name\n    }\n  });\n  if (songLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  } else {\n    const randomIndex = songData.song[Math.floor(Math.random() * songData.song.length)];\n    const selectedSong = randomIndex.song_name;\n    const selectedKey = randomIndex.key;\n    const selectedProgression = randomIndex.progression;\n    const selectedTempo = randomIndex.tempo;\n    let artistImg;\n    if (artist_name === \"Juice WRLD\") {\n      artistImg = Juice;\n    } else if (artist_name === \"Doja Cat\") {\n      artistImg = Doja;\n    } else if (artist_name === \"Gunna\") {\n      artistImg = Gunna;\n    } else if (artist_name === \"21 Savage\") {\n      artistImg = TwentyOne;\n    } else if (artist_name === \"Jack Harlow\") {\n      artistImg = Harlow;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"train-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"train-contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-shadow train-img-container\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: artistImg,\n            className: \"  train__img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-data-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"song__header ps1\",\n            children: selectedSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KeyTempoChords, {\n            selectedKey: selectedKey,\n            selectedTempo: selectedTempo,\n            selectedProgression: selectedProgression\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReRoll, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReferenceSongsFrequency, {\n        selectedProgression: selectedProgression,\n        artist_name: artist_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReferenceSongs, {\n        artist_name: artist_name,\n        progression: selectedProgression,\n        selectedSong: selectedSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(TrainInfo, \"GdPJOYbN12a9KmqwEu1Zskq4qow=\", false, function () {\n  return [useQuery];\n});\n_c = TrainInfo;\nexport default TrainInfo;\nvar _c;\n$RefreshReg$(_c, \"TrainInfo\");","map":{"version":3,"names":["React","useQuery","SINGLE_SONG","Juice","TwentyOne","Doja","Harlow","Gunna","ReferenceSongs","ReferenceSongsFrequency","KeyTempoChords","ReRoll","chordIcon","keyIcon","tempoIcon","TrainInfo","artist_name","console","log","data","songData","loading","songLoading","error","songError","variables","artistName","randomIndex","song","Math","floor","random","length","selectedSong","song_name","selectedKey","key","selectedProgression","progression","selectedTempo","tempo","artistImg"],"sources":["/Users/petehodnefield/Documents/coding-projects-personal/melody-trainer/client/src/pages/Freestyle/components/TrainInfo.js"],"sourcesContent":["import { React } from \"react\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { SINGLE_SONG } from \"../../../utils/queries\";\nimport Juice from \"../../../assets/artists/juice.jpeg\";\nimport TwentyOne from \"../../../assets/artists/21.jpeg\";\nimport Doja from \"../../../assets/artists/doja.jpeg\";\nimport Harlow from \"../../../assets/artists/harlow.jpeg\";\nimport Gunna from \"../../../assets/artists/gunna.jpeg\";\nimport ReferenceSongs from \"../../../components/ReferenceSongs/index\";\nimport ReferenceSongsFrequency from \"../../../components/ReferenceSongs/ReferenceSongsFrequency\";\nimport KeyTempoChords from \"../../../components/KeyTempoChords\";\nimport ReRoll from \"../../../components/KeyTempoChords/ReRoll\";\nimport { chordIcon, keyIcon, tempoIcon } from \"../../../data/icons\";\n\nfunction TrainInfo({ artist_name }) {\n  console.log(chordIcon, keyIcon);\n  const {\n    data: songData,\n    loading: songLoading,\n    error: songError,\n  } = useQuery(SINGLE_SONG, {\n    variables: { artistName: artist_name },\n  });\n  if (songLoading) {\n    return <p>loading</p>;\n  } else {\n    const randomIndex =\n      songData.song[Math.floor(Math.random() * songData.song.length)];\n    const selectedSong = randomIndex.song_name;\n    const selectedKey = randomIndex.key;\n    const selectedProgression = randomIndex.progression;\n    const selectedTempo = randomIndex.tempo;\n\n    let artistImg;\n    if (artist_name === \"Juice WRLD\") {\n      artistImg = Juice;\n    } else if (artist_name === \"Doja Cat\") {\n      artistImg = Doja;\n    } else if (artist_name === \"Gunna\") {\n      artistImg = Gunna;\n    } else if (artist_name === \"21 Savage\") {\n      artistImg = TwentyOne;\n    } else if (artist_name === \"Jack Harlow\") {\n      artistImg = Harlow;\n    }\n\n    return (\n      <div className=\"train-wrapper\">\n        <div className=\"train-contents\">\n          <div className=\"box-shadow train-img-container\">\n            {\" \"}\n            <img src={artistImg} className=\"  train__img\"></img>\n          </div>\n          <div className=\"song-data-wrapper\">\n            <h2 className=\"song__header ps1\">{selectedSong}</h2>\n            <KeyTempoChords\n              selectedKey={selectedKey}\n              selectedTempo={selectedTempo}\n              selectedProgression={selectedProgression}\n            ></KeyTempoChords>\n            <ReRoll></ReRoll>\n          </div>\n        </div>\n        <ReferenceSongsFrequency\n          selectedProgression={selectedProgression}\n          artist_name={artist_name}\n        ></ReferenceSongsFrequency>\n        <ReferenceSongs\n          artist_name={artist_name}\n          progression={selectedProgression}\n          selectedSong={selectedSong}\n        ></ReferenceSongs>\n      </div>\n    );\n  }\n}\n\nexport default TrainInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}